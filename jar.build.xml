<project name="jar" default="publish" xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
  Provides the target for building a jar file of the SensorBase.
  </description>

  <import file="build.xml"/>
  <property name="tmp.dir" location="${basedir}/tmp" />
  <property name="tmp.lib.dir" location="${basedir}/tmp-lib" />
  <property name="build.jar.dir" location="${build.dir}/jar" />
  <delete dir="${build.jar.dir}" quiet="true"/>
 
  <target name="jar" depends="jar-standalone, jar-lib">
  </target>

  <target name="jar-standalone" depends="compile" 
    description="Create sensorbase.jar">
    <!-- Define the directories and distribution name -->
    <delete dir="${tmp.dir}" quiet="yes"/>
    <mkdir dir="${tmp.dir}" />
    <mkdir dir="${build.jar.dir}"/>
    <copy todir="${tmp.dir}">
      <fileset dir="${basedir}/build/classes"/>
    </copy>
  
    <!-- First build sensorbaseclient.jar, which is everything but derby. --> 
    <unjar src="${lib.dir}/hackystat-utilities/hackystatlogger.lib.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/hackystat-utilities/stacktrace.lib.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/hackystat-utilities/tstamp.lib.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/hackystat-utilities/uricache.lib.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/hackystat-utilities/time.lib.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/hackystat-utilities/hackystatuserhome.lib.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/hackystat-utilities/validate.email.lib.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/restlet/org.simpleframework.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/restlet/org.restlet.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/restlet/com.noelios.restlet.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/restlet/com.noelios.restlet.ext.net.jar" dest="${tmp.dir}"/>
    <unjar src="${lib.dir}/restlet/com.noelios.restlet.ext.simple_3.1.jar" dest="${tmp.dir}"/>

    <!-- No main class, this jar file is a library and cannot be run from the command line. -->
    <jar destfile="${build.jar.dir}/sensorbaseclient.jar" basedir="${tmp.dir}">
      <manifest>
        <attribute name="Implementation-Title" value="Hackystat SensorBaseClient"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="Collaborative Software Development Laboratory, University of Hawaii"/>
      </manifest>
    </jar>
    
    <!-- Now add derby and jar up sensorbase.jar. -->
    <unjar src="${lib.dir}/derby/derby.jar" dest="${tmp.dir}"/>
    <jar destfile="${build.jar.dir}/sensorbase.jar" basedir="${tmp.dir}">
       <manifest>
         <attribute name="Main-Class" value="org.hackystat.sensorbase.server.Server"/>
         <attribute name="Implementation-Title" value="Hackystat SensorBase-UH"/>
         <attribute name="Implementation-Version" value="${version}"/>
         <attribute name="Implementation-Vendor" value="Collaborative Software Development Laboratory, University of Hawaii"/>
       </manifest>
     </jar>

    <delete dir="${tmp.dir}" />
  </target> 
  
  <target name="jar-lib" depends="compile" 
     description="Create sensorbase.lib.jar, containing just org.hackystat.sensorbase code.">
     <!-- Define the directories and distribution name -->
     <mkdir dir="${build.jar.dir}"/>
     <mkdir dir="${tmp.lib.dir}" />
     <copy todir="${tmp.lib.dir}">
       <fileset dir="${basedir}/build/classes"/>
     </copy>
   
     <jar destfile="${build.jar.dir}/sensorbase.lib.jar" basedir="${tmp.lib.dir}">
       <manifest>
         <attribute name="Implementation-Title" value="Hackystat SensorBase-UH"/>
         <attribute name="Implementation-Version" value="${version}"/>
         <attribute name="Implementation-Vendor" value="Collaborative Software Development Laboratory, University of Hawaii"/>
       </manifest>
     </jar>
     <delete dir="${tmp.lib.dir}" />
   </target>   
  
  <!--
     Ivy publication targets.
   -->
  <import file="javadoc.build.xml"/>
  <target name="publish" depends="jar, javadoc.zip" description="Publish this project in the local ivy repository">
    <ivy:resolve />
    <tstamp>
      <format property="publication-revision" pattern="yyyy.MM.dd.HH.mm.ss" />
    </tstamp>
    <ivy:publish artifactspattern="${build.jar.dir}/[artifact].[ext]" resolver="local-repository" pubrevision="${publication-revision}" update="true"/>
  </target>  
  
  <target name="publish-all" description="Publish all dependent projects, then this one.">
    <ant antfile="../hackystat-utilities/jar.build.xml" target="publish-all" inheritAll="false"/>
    <antcall target="publish"/>
  </target>
</project>

